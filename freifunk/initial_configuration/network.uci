package network

# bat0 Interface - wird fuer batman-adv Bridgin benoetigt
config interface 'bat0'
	option proto 'none'
	option ifname 'bat0'

# Freifunk-Interface - das Haupt-Interface des Nodes.
# Dieser Bridge sind alle konfigurierten Netze zugewiesen
# Sie verwendet per default eine eigene routing-Tabelle
# und ist IPv4 / IPv6 Dual stacked konfiguriert

# via ip6assign und ip6class wird erreicht, dass der konfigurierte
# ULA range fuer router advertisments zur Verfuegung steht
config interface 'freifunk'
	option ifname 'bat0'
	option type 'bridge'
	option auto '1'
	option proto 'static'
	option ipaddr '10.159.64.1'
	option netmask '255.255.255.0'
	option ip6prefix 'fdd3:5d16:b5dd:f064::/64'
	option ip6assign '64'
	list ip6class 'vpn6'
	list ip6class 'freifunk'
# 	list ip6class 'wan6' # ACHTUNG: Nur aktivieren, wenn Du Dein Internet ohne VPN freigeben willst.

# Fastd wird hier als interface konfiguriert, damit es in der Firewall
# referenziert werden kann.
# Auf dem Interface ist die IPv4 Adresse des Nodes konfiguriert - 
# jedoch ohne entspr. Fuer IPv6 wird einfach die Link Local Adresse verwendet
config interface 'fastd' 
	option ifname 'tap-fastd'
	option proto 'static'
	option ipaddr '10.159.64.1'
	option netmask '255.255.255.255'
	option ip4table '66'
	option ip6table '66'

# Aehnlich zu fastd wird das Interface fuer das Exit-VPN definiert
# Es kann somit in der Firewall referenziert werden.
# Die IP-Adresse wird jedoch durch den VPN-Provider gesetzt
config interface 'vpn'
	option proto 'none'
	option ifname 'vpn-nat'
	option ip4table '66'
	option ip6table '66'

# Einige VPN-Tunnel (z.B. Freifunk Berlin) verwendet routed Adressen
# Das Interface liegt somit in der Freifunk-Zone es findet kein Masquerading statt
config interface 'vpn_routed'
	option proto 'none'
	option ifname 'vpn'
	option ip4table '66'
	option ip6table '66'


# Falls der VPN-Provider IPv6 Prefix-Delegation unterstuetzt
# Wird ein entspr. Prefix abgerufen. Gleichzeit wird Policy-Routing
# Fuer die entspr. Adressen definiert
config interface 'vpn6'
	option proto 'dhcpv6'
	option ifname 'vpn-nat'
	option ip6table '66'

config interface 'vpn6_routed'
	option proto 'dhcpv6'
	option ifname 'vpn'
	option ip6table '66'

# VPN - falls PPTP verwendet wird
# Server sind bspw.
# - omni.freifunk-koeln.de
# - yagi.freifunk-koeln.de
# Accounts: E-Mail an vpn@freifunk-koeln.de
config interface 'vpn_pptp'
        option enabled '0'
        option proto 'pptp'
        option server 'omni.freifunk-koeln.de'
        option username 'user'
        option password 'passwort'
        option ip4table '66'
        option ip6table '66'

config interface 'vpn_pptp6'
        option enabled '0'
        option proto 'dhcpv6'
        option ifname 'pptp-vpn_pptp'
        option ip6table '66'



# Batman-adv Interface. Definiert, dass batman-adv fuer das mesh
# Verwendet wird
config interface 'mesh'
	option proto 'batadv'
	option mtu '1532'
	option mesh 'bat0'

# Lokaler Supernode - Kompatibel zu gluon
# Die MTU muss ggf. angepasst werden
config interface 'supernode'
	option ifname 'tap-supernode'
        option enabled '0'
	option proto 'batadv'
	option mtu '1312'
	option mesh 'bat0'
	
# Route in der Freifunk-Tabelle: Konfigurierten Range auf Interface routen
config route 'route4_node_subnet'
	option interface 'freifunk'
	option target '10.159.64.0'
	option netmask '255.255.255.0'
	option gateway '0.0.0.0'
	option table '66'

# Route in der Freifunk-Tabelle: Konfiguriertes ULA-Netz auf Interface routen
config route6 'route_6_node_subnet'
	option interface 'freifunk'
	option target 'fdd3:5d16:b5dd:f064::/64'
	option table '66'


# Addresse: Routing Ã¼ber ipv4
config interface 'babel_mesh'           
        option proto 'static'           
        option ipaddr '10.159.64.1'     
        option netmask '255.255.255.255'
        option ip4table '66'
        option ip6table '66'

config rule 'rule_freifunk_in'
    option in     'freifunk'
	option lookup '66'
	option priority '66'

config rule 'rule_freifunk_out'
    option out     'freifunk'
	option lookup '66'
	option priority '66'

config rule 'rule_iacvpn_in'
    option in     'fastd'
	option lookup '66'
	option priority '66'

config rule 'rule_iacvpn_out'
    option out    'fastd'
	option lookup '66'
	option priority '66'

config rule 'rule_vpn_in'
    option in 'vpn'
    option lookup '66'
	option priority '66'

config rule 'rule_vpn_out'
    option out 'vpn'
    option lookup '66'
	option priority '66'

config rule 'rule_vpn_routed_in'
    option in 'vpn_routed'
    option lookup '66'
	option priority '66'

config rule 'rule_vpn_routed_out'
    option out 'vpn_routed'
    option lookup '66'
	option priority '66'

# Hack: Durch 
# option ip4table '66' 
# bei der Network-Definition von babel_mesh wird eine rule mit priority > 80000 erzeugt
# Die Rule muss aber < main sein, d.h. prioritaet 66 haben
config rule 'rule_node_ip_high_prio'
    option src '10.159.64.1/32'
    option lookup '66'
    option priority '66'

config rule6 'rule6_freifunk_in'
    option in     'freifunk'
	option lookup '66'
	option priority '66'

config rule6 'rule6_freifunk_out'
    option out     'freifunk'
	option lookup '66'
	option priority '66'

config rule6 'rule6_iacvpn_in'
    option in     'fastd'
	option lookup '66'
	option priority '66'

config rule6 'rule6_iacvpn_out'
    option out    'fastd'
	option lookup '66'
	option priority '66'

# Traffic aus dem babel-mesh nutzt auch tabelle 66
config rule 'rule_babel_in'         
        option in 'babel_mesh'      
        option lookup '66'          
        option priority '66'        
                                    
config rule 'rule_babel_out'        
        option out 'babel_mesh'     
        option lookup '66'          
        option priority '66' 

config rule6 'rule6_babel_in'         
        option in 'babel_mesh'      
        option lookup '66'          
        option priority '66'        
                                    
config rule6 'rule6_babel_out'        
        option out 'babel_mesh'     
        option lookup '66'          
        option priority '66' 
