#!/bin/sh

# Importiere vorhandene Konfiguration

# Sonderfall: Wireless - hier muessen vorhadene settings geloescht und gesetzt  werden, die nicht einfach
# merged werden koennen

uci -q batch <<EOF
        delete wireless.radio0.disabled                 # WLAN Einschalten
        delete wireless.@wifi-iface[0]                  # OpenWRT-Default WLAN loeschen
        set wireless.radio0.channel='1'                 # Funkeinstellungen
        set wireless.radio0.htmode='HT20'
        set wireless.radio0.country='DE'

        delete wireless.radio0.disabled                 # WLAN Einschalten
        delete wireless.@wifi-iface[0]                  # OpenWRT-Default WLAN loeschen
        commit wireless
EOF

## Weitere Konfigurationen werden via uci import eingelesen und aufgenommen:

# firewall, dhcp, network und wireless ergÃ¤nzen die vorhandene Konfiguration (-m)
# Bei allen anderen Paketen wird die vorhandene Konfiguration ersetzt

uci import firewall -m < /lib/freifunk/initial_configuration/firewall 
uci import network -m < /lib/freifunk/initial_configuration/network
uci import dhcp -m < /lib/freifunk/initial_configuration/dhcp
uci import wireless -m < /lib/freifunk/initial_configuration/wireless

uci import babeld < /lib/freifunk/initial_configuration/babeld
uci import batman-adv < /lib/freifunk/initial_configuration/batman-adv
uci import fastd < /lib/freifunk/initial_configuration/fastd

uci commit

# ebtables Multicast-Filter - wieder keine UCI-Settings
# Verbiete Multicast (d.h. auch Broadcast) im batman-adv Mesh
# Erlaube DHCP und ARP - Sie werden von batman-adv in unicast umgewandelt
echo "ebtables -F" >> /etc/firewall.user
echo "ebtables -A FORWARD -p ARP -j ACCEPT" >> /etc/firewall.user
echo "ebtables -A FORWARD -p IPv4 --ip-protocol udp --ip-destination-port 67:68 -j ACCEPT" >> /etc/firewall.user
echo "ebtables -A FORWARD -d Multicast -j DROP" >> /etc/firewall.user

set_ip

echo "Konfiguration abgeschlossen --- Node sollte jetzt neu gestartet werden"